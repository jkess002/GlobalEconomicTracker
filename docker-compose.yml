services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_pipeline:airflow_pipeline@postgres:5432/airflow_pipeline
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
    volumes:
      - ./airflow_pipeline/dags:/opt/airflow_pipeline/dags
      - ./airflow_pipeline/logs:/opt/airflow_pipeline/logs
      - ./airflow_pipeline/plugins:/opt/airflow_pipeline/plugins
      - ./global_economic_tracker:/opt/global_economic_tracker
      - ~/.dbt:/home/airflow_pipeline/.dbt
    ports:
      - "8080:8080"
    command: webserver
    restart: always
    depends_on:
      - postgres
      - airflow-scheduler

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_pipeline:airflow_pipeline@postgres:5432/airflow_pipeline
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
    volumes:
      - ./airflow_pipeline/dags:/opt/airflow_pipeline/dags
      - ./airflow_pipeline/logs:/opt/airflow_pipeline/logs
      - ./airflow_pipeline/plugins:/opt/airflow_pipeline/plugins
      - ./global_economic_tracker:/opt/global_economic_tracker
      - ~/.dbt:/home/airflow_pipeline/.dbt
    command: scheduler
    restart: always
    depends_on:
      - postgres

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper


  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

volumes:
  postgres_data:
  redpanda_data:
